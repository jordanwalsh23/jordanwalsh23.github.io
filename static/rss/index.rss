<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>API Evangelism, Technology, and Exploration</title><description>Musings of a hybrid product manager / developer / API evangelist</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>API Evangelism, Technology, and Exploration</title><link>http://localhost:2368/</link></image><generator>Ghost 1.5</generator><lastBuildDate>Tue, 08 Aug 2017 05:29:54 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Building an API - Lessons Learned</title><description>&lt;div class="kg-card-markdown"&gt;&lt;p&gt;In 2011 my boss came to me and asked me to design an API for our product.&lt;/p&gt;
&lt;p&gt;My response. &lt;em&gt;API? Sure! What’s that?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Although I had been exposed to APIs in the past in my role as a developer, I had never thought about the API design from a&lt;/p&gt;&lt;/div&gt;</description><link>http://localhost:2368/building-an-api-lessons-learned/</link><guid isPermaLink="false">598941734879a07cf5954d7c</guid><dc:creator>Jordan Walsh</dc:creator><pubDate>Tue, 08 Aug 2017 04:46:34 GMT</pubDate><content:encoded>&lt;div class="kg-card-markdown"&gt;&lt;p&gt;In 2011 my boss came to me and asked me to design an API for our product.&lt;/p&gt;
&lt;p&gt;My response. &lt;em&gt;API? Sure! What’s that?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Although I had been exposed to APIs in the past in my role as a developer, I had never thought about the API design from a supplier perspective, only ever a user. I now had to think about this from a whole new angle.&lt;/p&gt;
&lt;p&gt;Where to start…?&lt;/p&gt;
&lt;p&gt;After doing a bit of research, I presented my team with a macro design about how the API would work. It was going to follow this amazing standard for APIs called ‘REST’.&lt;/p&gt;
&lt;p&gt;The following links were invaluable during the concept and design phases of the API:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.getpostman.com/"&gt;Postman&lt;/a&gt;&lt;br&gt;
A powerful GUI platform to make your API development faster &amp;amp; easier, from building API requests through testing, documentation and sharing.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.runscope.com/"&gt;Runscope&lt;/a&gt;&lt;br&gt;
Proxy the requests from your app to your API with Runscope. Verify that your APIs are returning the correct data. This tool deserves an entire blog post on it’s own. Just sign up and use it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api?hn"&gt;Best Practices for designing REST APIs&lt;br&gt;
&lt;/a&gt;An excellent article around the reasons why REST APIs are designed the way they are. Brilliant stuff.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.apigee.com/detail/restful_api_design/"&gt;RESTful API Design: Teach a Dog to REST&lt;/a&gt;&lt;br&gt;
A great presentation on the best practices and principles of restful architecture and design. A must for anyone getting introduced REST APIs.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.restapitutorial.com/"&gt;REST API Tutorial&lt;/a&gt;&lt;br&gt;
A step-by-step tutorial on what REST is and why it is good&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jacobian.org/writing/rest-worst-practices/"&gt;REST Anti-patterns&lt;/a&gt;&lt;br&gt;
A good article about the do not’s of REST&lt;/p&gt;
&lt;p&gt;The API that I designed has now been in production for over 6 years and I’m writing (re-publishing) this post because if I was doing this all over again, there’s a few things that I would have liked to have known, namely:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;REST — Best Practice vs Practicality&lt;/li&gt;
&lt;li&gt;Versioning your APIs&lt;/li&gt;
&lt;li&gt;Securing your APIs&lt;/li&gt;
&lt;li&gt;API Service / Gateway Providers&lt;/li&gt;
&lt;li&gt;API Deployment and Update methodologies&lt;/li&gt;
&lt;li&gt;Developer Community &amp;amp; Examples&lt;/li&gt;
&lt;li&gt;Carding for Developers (Agile Story Cards)&lt;/li&gt;
&lt;li&gt;Documentation (OpenAPI Spec)&lt;/li&gt;
&lt;li&gt;User feedback!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Over the next few months I’m going to be pushing content related to each of these areas, so stay tuned!&lt;/p&gt;
&lt;p&gt;Please feel free to drop me a line if you’re curious about any other aspects of the API design and any decisions that I made along the way.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="http://jordwalsh.com"&gt;jordwalsh.com&lt;/a&gt; on April 26, 2014.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</content:encoded></item></channel></rss>